@import 'fonts.sass'

// Overwritable Variables
$baseUrl: '/some/url/' !default
$print: false !default


$font: '#{$baseUrl}fontName=' !default

$width: '#{$baseUrl}width=' !default
$height: '#{$baseUrl}height=' !default
$dpi: '#{$baseUrl}dpi=' !default
$pointer: '#{$baseUrl}pointer=' !default
$touchscreen: '#{$baseUrl}touchscreen=' !default

$color: '#{$baseUrl}color=' !default
$color-gamut: '#{$baseUrl}color-gamut=' !default
$color-index: '#{$baseUrl}color-index=' !default
$forced-colors: '#{$baseUrl}forced-colors=' !default
$inverted-colors: '#{$baseUrl}inverted-colors=' !default

$grid: '#{$baseUrl}grid=' !default
$scan: '#{$baseUrl}scan=' !default
$display-mode: '#{$baseUrl}display-mode=' !default
$overflow-block: '#{$baseUrl}overflow-block=' !default
$overflow-inline: '#{$baseUrl}overflow-inline=' !default
$update: '#{$baseUrl}update=' !default

$theme: '#{$baseUrl}theme=' !default
$scripting: '#{$baseUrl}scripting=' !default
$contrast: '#{$baseUrl}contrast=' !default
$motion: '#{$baseUrl}motion=' !default
$transparency: '#{$baseUrl}transparency=' !default

$family: '#{$baseUrl}family=' !default
$os: '#{$baseUrl}os=' !default


@mixin hide
    font-size: 0px !important
    padding: 0 !important
    margin: 0 !important
    height: 0 !important
    width: 0 !important
    overflow: hidden !important
    position: fixed !important
    visibility: none !important




/* Device Attributes */
    
// Dimentions
@mixin width
    @for $i from 300px through 3840px
        @media (width: $i)
            &::after
                background-image: url('#{$width}#{$i}')
                @if $print
                    content: 'Width: #{$i}'
                @else
                    @include hide

@mixin height
    @for $i from 250px through 2161px
        @media (height: $i)
            &::after
                background-image: url('#{$height}#{$i}')
                @if $print
                    content: 'Height: #{$i}'
                @else
                    @include hide


// DPI
@mixin dpi
    @for $i from 1dpi through 1000dpi
        @media (resolution: $i)
            &::after
                background-image: url('#{$dpi}#{$i}')
                @if $print
                    content: 'DPI: #{$i}'
                @else
                    @include hide


// Pointer
@mixin pointer
    &::after
        background-image: url('#{$pointer}none')
        @if $print
            content: 'Pointer: None'
        @else
            @include hide

    @media (any-pointer: coarse)
        &::after
            background-image: url('#{$pointer}coarse')
            @if $print
                content: 'Pointer: Coarse'
            @else
                @include hide    

    @media (any-pointer: fine)
        &::after
            background-image: url('#{$pointer}fine')
            @if $print
                content: 'Pointer: Fine'
            @else
                @include hide   


// Touchscreen
@mixin touchscreen
    &::after
        background-image: url('#{$touchscreen}false')
        @if $print
            content: 'Touchscreen: False'
        @else
            @include hide   

    @media (any-hover: none)
        &::after
            background-image: url('#{$touchscreen}true')
            @if $print
                content: 'Touchscreen: True'
            @else
                @include hide   



/* Color */

// Color
@mixin color
    @for $i from 1 through 48
        @media (color: $i)
            &::after
                background-image: url('#{$color}#{$i}')
                @if $print
                    content: 'Bits Per Color: #{$i}'
                @else
                    @include hide


// Color Gamut
@mixin color-gamut
    $gamut: [srgb,p3,rec2020]
    @each $value in $gamut
        @media (color-gamut: $value)
            &::after
                background-image: url('#{$color-gamut}#{$value}')
                @if $print
                    content: 'Color Gamut: #{$value}'
                @else
                    @include hide

// Color Index
@mixin color-index
    $hex: [1,256,4096,32768,65536,262144,16777216,1073741824,68719476736,281474976710656]
    @each $value in $hex
        @media (min-color-index: $value)
            &::after
                background-image: url('#{$color-index}#{$value}')
                @if $print
                    content: 'Color Index: #{$value}'
                @else
                    @include hide

// Forced Colors
@mixin forced-colors
    &::after
        background-image: url('#{$forced-colors}none')
        @if $print
            content: 'Forced Colors: None'
        @else
            @include hide
    
    @media (forced-colors: active)
        &::after
            background-image: url('#{$forced-colors}active')
            @if $print
                content: 'Forced Colors: Active'
            @else
                @include hide

// Inverted Colors
@mixin inverted-colors
    &::after
        background-image: url('#{$inverted-colors}unknown')
        @if $print
            content: 'Inverted Colors: Unknown'
        @else
            @include hide
    
    @media (inverted-colors: none)
        &::after
            background-image: url('#{$inverted-colors}none')
            @if $print
                content: 'Inverted Colors: None'
            @else
                @include hide
    
    @media (inverted-colors: inverted)
        &::after
            background-image: url('#{$inverted-colors}inverted')
            @if $print
                content: 'Forced Colors: Inverted'
            @else
                @include hide




/* Display Attributes */

// Grid
@mixin grid
    &::after
        background-image: url('#{$grid}unknown')
        @if $print
            content: 'Grid-based Screen: Unknown'
        @else
            @include hide
    
    @media (grid: 0)
        &::after
            background-image: url('#{$grid}false')
            @if $print
                content: 'Grid-based Screen: False'
            @else
                @include hide
    
    @media (grid: 1)
        &::after
            background-image: url('#{$grid}true')
            @if $print
                content: 'Grid-based Screen: True'
            @else
                @include hide

// Scan
@mixin scan
    &::after
        background-image: url('#{$scan}none')
        @if $print
            content: 'Scanning Process: None'
        @else
            @include hide
    @media (scan: interlace)
        &::after
            background-image: url('#{$scan}interlaced')
            @if $print
                content: 'Scanning Process: Interlaced'
            @else
                @include hide
    @media (scan: interlace)
        &::after
            background-image: url('#{$scan}interlaced')
            @if $print
                content: 'Scanning Process: Interlaced'
            @else
                @include hide

// Display Mode
@mixin display-mode
    $mode: [fullscreen,standalone,minimal-ui,browser]
    @each $value in $mode
        @media (display-mode: $value)
            &::after
                background-image: url('#{$display-mode}#{$value}')
                @if $print
                    content: 'Display Mode: #{$value}'
                @else
                    @include hide

// Overflow Block
@mixin overflow-block
    $mode: [none,scroll,optional-paged,paged]
    &::after
        background-image: url('#{$overflow-block}unknown')
        @if $print
            content: 'Overflow Block: Unknown'
        @else
            @include hide
    
    @each $value in $mode
        @media (overflow-block: $value)
            &::after
                background-image: url('#{$overflow-block}#{$value}')
                @if $print
                    content: 'Overflow Block: #{$value}'
                @else
                    @include hide

// Overflow Inline
@mixin overflow-inline
    $mode: [none,scroll]
    &::after
        background-image: url('#{$overflow-inline}unknown')
        @if $print
            content: 'Overflow Inline: Unknown'
        @else
            @include hide
    
    @each $value in $mode
        @media (overflow-inline: $value)
            &::after
                background-image: url('#{$overflow-inline}#{$value}')
                @if $print
                    content: 'Overflow Inline: #{$value}'
                @else
                    @include hide

// Update
@mixin update
    $mode: [none,slow,fast]
    &::after
        background-image: url('#{$update}unknown')
        @if $print
            content: 'Update Speed: Unknown'
        @else
            @include hide
    
    @each $value in $mode
        @media (update: $value)
            &::after
                background-image: url('#{$update}#{$value}')
                @if $print
                    content: 'Update Speed: #{$value}'
                @else
                    @include hide



/* User Preferences */

// Color scheme preference
@mixin theme
    &::after
        background-image: url('#{$theme}none')
        @if $print
            content: 'Theme preference: None'
        @else
            @include hide   

    @media (prefers-color-scheme: dark) 
        &::after
            background-image: url('#{$theme}dark')
            @if $print
                content: 'Theme preference: Dark'
            @else
                @include hide   
            
    @media (prefers-color-scheme: light) 
        &::after
            background-image: url('#{$theme}light')
            @if $print
                content: 'Theme preference: light'
            @else
                @include hide   


// Scripting Preferences
@mixin scripting
    &::after
        background-image: url('#{$scripting}true')
        @if $print
            content: 'Scripting: Enabled'
        @else
            @include hide   

    @media (scripting: initial-only)
        &::after
            background-image: url('#{$scripting}initial-only')
            @if $print
                content: 'Scripting: Only Initial'
            @else
                @include hide   

    @media (scripting: none)
        &::after
            background-image: url('#{$scripting}false')
            @if $print
                content: 'Scripting: Disabled'
            @else
                @include hide   

// Contrast
@mixin contrast
    $peference: [no-preference,more,less]
    &::after
        background-image: url('#{$contrast}unknown')
        @if $print
            content: 'Contrast Preference: Unknown'
        @else
            @include hide
    
    @each $value in $peference
        @media (prefers-contrast: $value)
            &::after
                background-image: url('#{$contrast}#{$value}')
                @if $print
                    content: 'Contrast Preference: #{$value}'
                @else
                    @include hide


// Reduced Motion
@mixin motion
    $peference: [no-preference,reduce]
    &::after
        background-image: url('#{$motion}unknown')
        @if $print
            content: 'Reduced Motion Preference: Unknown'
        @else
            @include hide
    
    @each $value in $peference
        @media (prefers-reduced-motion: $value)
            &::after
                background-image: url('#{$motion}#{$value}')
                @if $print
                    content: 'Reduced Motion Preference: #{$value}'
                @else
                    @include hide

// Reduced Transparency
@mixin transparency
    $peference: [no-preference,reduce]
    &::after
        background-image: url('#{$transparency}unknown')
        @if $print
            content: 'Reduced Transparency Preference: Unknown'
        @else
            @include hide
    
    @each $value in $peference
        @media (prefers-reduced-transparency: $value)
            &::after
                background-image: url('#{$transparency}#{$value}')
                @if $print
                    content: 'Reduced Transparency Preference: #{$value}'
                @else
                    @include hide




/* Browser and OS*/

// Browser Family
@mixin family
    &::after
        background-image: url('#{$family}ie')
        @if $print
            content: 'Browser Family: Internet Explorer'
        @else
            @include hide   

    @supports (-webkit-font-smoothing:auto)
        &::after
            background-image: url('#{$family}chromium')
            @if $print  
                content: 'Browser Family: Chromium'
            @else
                @include hide   

    @supports (speech:none)
        &::after
            background-image: url('#{$family}opera')
            @if $print
                content: 'Browser Family: Opera'
            @else
                @include hide   

    @supports not (-webkit-appearance: auto)
        &::after
            background-image: url('#{$family}safari')
            @if $print
                content: 'Browser Family: Safari'
            @else
                @include hide   

    @supports (-moz-device-pixel-ratio: 1)
        &::after
            background-image: url('#{$family}firefox')
            @if $print
                content: 'Browser Family: Firefox'
            @else
                @include hide   

// OS
@mixin os
    @supports (-webkit-overflow-scrolling:auto)
        &::after
            background-image: url('#{$os}ios')
            @if $print
                content: 'OS: IOS'
            @else
                @include hide   



/* Fonts */

@mixin fonts
    @include hide
    @for $i from 1 through length($font-array)
        >:nth-child(#{$i - 1}n)
            &::after
                content: '.'
                font-family: '#{nth(nth($font-array, $i),2)}' 

@for $i from 1 through length($font-array)
    @font-face
        font-family: '#{nth(nth($font-array, $i),2)}'
        src: local(nth(nth($font-array, $i),1)), url('#{$font}#{nth(nth($font-array, $i),2)}')

